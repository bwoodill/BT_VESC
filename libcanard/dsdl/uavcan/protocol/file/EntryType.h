/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /Users/jaime/Developer/ardupilot/modules/uavcan/dsdl/uavcan/protocol/file/EntryType.uavcan
 */

#ifndef __UAVCAN_PROTOCOL_FILE_ENTRYTYPE
#define __UAVCAN_PROTOCOL_FILE_ENTRYTYPE

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# Nested type.
# Represents the type of the file system entry (e.g. file or directory).
# If such entry does not exist, 'flags' must be set to zero.
#

uint8 FLAG_FILE      = 1        # Excludes FLAG_DIRECTORY
uint8 FLAG_DIRECTORY = 2        # Excludes FLAG_FILE
uint8 FLAG_SYMLINK   = 4        # Link target is either FLAG_FILE or FLAG_DIRECTORY
uint8 FLAG_READABLE  = 8
uint8 FLAG_WRITEABLE = 16

uint8 flags
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.protocol.file.EntryType
saturated uint8 flags
******************************************************************************/

#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_NAME                "uavcan.protocol.file.EntryType"
#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_SIGNATURE           (0x6924572FBB2086E5ULL)

#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_MAX_SIZE            ((8 + 7)/8)

// Constants
#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_FLAG_FILE                              1 // 1
#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_FLAG_DIRECTORY                         2 // 2
#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_FLAG_SYMLINK                           4 // 4
#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_FLAG_READABLE                          8 // 8
#define UAVCAN_PROTOCOL_FILE_ENTRYTYPE_FLAG_WRITEABLE                        16 // 16

typedef struct
{
    // FieldTypes
    uint8_t    flags;                         // bit len 8

} uavcan_protocol_file_EntryType;

extern
uint32_t uavcan_protocol_file_EntryType_encode(uavcan_protocol_file_EntryType* source, void* msg_buf);

extern
int32_t uavcan_protocol_file_EntryType_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_protocol_file_EntryType* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_protocol_file_EntryType_encode_internal(uavcan_protocol_file_EntryType* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_protocol_file_EntryType_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_protocol_file_EntryType* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_PROTOCOL_FILE_ENTRYTYPE