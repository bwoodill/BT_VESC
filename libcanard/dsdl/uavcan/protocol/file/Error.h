/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /Users/jaime/Developer/ardupilot/modules/uavcan/dsdl/uavcan/protocol/file/Error.uavcan
 */

#ifndef __UAVCAN_PROTOCOL_FILE_ERROR
#define __UAVCAN_PROTOCOL_FILE_ERROR

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# Nested type.
# File operation result code.
#

int16 OK                = 0
int16 UNKNOWN_ERROR     = 32767

int16 NOT_FOUND         = 2
int16 IO_ERROR          = 5
int16 ACCESS_DENIED     = 13
int16 IS_DIRECTORY      = 21 # I.e. attempt to read/write on a path that points to a directory
int16 INVALID_VALUE     = 22 # E.g. file name is not valid for the target file system
int16 FILE_TOO_LARGE    = 27
int16 OUT_OF_SPACE      = 28
int16 NOT_IMPLEMENTED   = 38

int16 value
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.protocol.file.Error
saturated int16 value
******************************************************************************/

#define UAVCAN_PROTOCOL_FILE_ERROR_NAME                    "uavcan.protocol.file.Error"
#define UAVCAN_PROTOCOL_FILE_ERROR_SIGNATURE               (0xA83071FFEA4FAE15ULL)

#define UAVCAN_PROTOCOL_FILE_ERROR_MAX_SIZE                ((16 + 7)/8)

// Constants
#define UAVCAN_PROTOCOL_FILE_ERROR_OK                                         0 // 0
#define UAVCAN_PROTOCOL_FILE_ERROR_UNKNOWN_ERROR                          32767 // 32767
#define UAVCAN_PROTOCOL_FILE_ERROR_NOT_FOUND                                  2 // 2
#define UAVCAN_PROTOCOL_FILE_ERROR_IO_ERROR                                   5 // 5
#define UAVCAN_PROTOCOL_FILE_ERROR_ACCESS_DENIED                             13 // 13
#define UAVCAN_PROTOCOL_FILE_ERROR_IS_DIRECTORY                              21 // 21
#define UAVCAN_PROTOCOL_FILE_ERROR_INVALID_VALUE                             22 // 22
#define UAVCAN_PROTOCOL_FILE_ERROR_FILE_TOO_LARGE                            27 // 27
#define UAVCAN_PROTOCOL_FILE_ERROR_OUT_OF_SPACE                              28 // 28
#define UAVCAN_PROTOCOL_FILE_ERROR_NOT_IMPLEMENTED                           38 // 38

typedef struct
{
    // FieldTypes
    int16_t    value;                         // bit len 16

} uavcan_protocol_file_Error;

extern
uint32_t uavcan_protocol_file_Error_encode(uavcan_protocol_file_Error* source, void* msg_buf);

extern
int32_t uavcan_protocol_file_Error_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_protocol_file_Error* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_protocol_file_Error_encode_internal(uavcan_protocol_file_Error* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_protocol_file_Error_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_protocol_file_Error* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_PROTOCOL_FILE_ERROR